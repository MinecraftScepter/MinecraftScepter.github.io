{"version":3,"file":"static/webpack/static\\development\\pages\\donation.js.9242527b58532737bab0.hot-update.js","sources":["webpack:///./pages/donation/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport ProTip from '~/src/ProTip';\r\nimport Link from '~/src/link';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Header from '~/src/header';\r\nimport Footer from'~/src/footer';\r\nimport Head from 'next/head';\r\nimport input from '~/src/content';\r\nimport superagent from 'superagent';\r\nimport { TextField, FormControlLabel } from '@material-ui/core';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport {BlocBuilder} from '@felangel/react-bloc';\r\nimport {\r\n  DonationBloc,\r\n  DonationFormEvent,\r\n  DonationFormState,\r\n  ModifyCommentEvent,\r\n  ModifyEmailEvent,\r\n  ModifyNameEvent,\r\n  ModifyPriceEvent,\r\n  ModifyTitleEvent,\r\n  SubmitEvent\r\n} from './_bloc/_donation_bloc';\r\nimport { TextFieldEx } from '../../src/components/withTextEnchancer';\r\nimport { useBloc } from '~/src/utility/bloc_utility';\r\nimport { PayPalButton } from '~/src/components/paypal_button';\r\nimport Config from '~/src/config';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: '#fafad2',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    backgroundColor: \"white\",\r\n    padding: 32,\r\n    borderRadius: 16,\r\n    boxShadow: \"0px 5px 5px -3px rgba(255, 90, 90, 0.2), 0px 8px 10px 1px rgba(255, 82, 0, 0.14), 0px 3px 14px 2px rgba(251, 255, 0, 0.12)\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"minecraftscepter.github.io/\">\r\n        創世神權杖\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\nexport default function Index() {\r\n  const classes = useStyles({});\r\n  const bloc = useBloc(new DonationBloc());\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      {/* <Header tabIndex={3}/> */}\r\n      <Card \r\n        className={classes.paper} elevation={8}\r\n      >\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          贊助基本資料\r\n        </Typography>\r\n        <BlocBuilder<DonationBloc, DonationFormState>\r\n          bloc={bloc}\r\n          builder={(state) => {\r\n            return (\r\n              <form className={classes.form} noValidate>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldEx\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      observedValue={state.email}\r\n                      error={!state.isEmailValid}\r\n                      helperText={!state.isEmailValid ? \"Email 格式錯誤\" : \"\"}\r\n                      observedChanged={(value) => {\r\n                        bloc.dispatch(new ModifyEmailEvent(value));\r\n                      }}\r\n                      fullWidth\r\n                      autoComplete=\"email\"\r\n                      required\r\n                      inputProps={{\r\n                        maxLength: 100,\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldEx \r\n                      label=\"小玩家稱呼(選填）\"\r\n                      variant=\"outlined\"\r\n                      id=\"fullname\"\r\n                      name=\"fullname\"\r\n                      fullWidth\r\n                      autoComplete=\"fullname\"\r\n                      inputProps={{\r\n                        maxLength: 20,\r\n                      }}\r\n                      observedValue={state.name}\r\n                      observedChanged={(value) => {\r\n                        bloc.dispatch(new ModifyNameEvent(value));\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldEx\r\n                      label=\"贊助金額(綠界最低30台幣)\"\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      inputProps={{\r\n                        maxLength: 20,\r\n                      }}\r\n                      observedValue={state.price.toString()}\r\n                      error={!state.isPriceValid}\r\n                      helperText={!state.isPriceValid ? \"由於使用綠界最低 30 元！\" : \"\"}\r\n                      observedChanged={(value) => {\r\n                        bloc.dispatch(new ModifyPriceEvent(parseInt(value)));\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldEx \r\n                      label=\"想要的功能或改善(選填)\" variant=\"outlined\"\r\n                      fullWidth\r\n                      multiline\r\n                      rows=\"2\"\r\n                      inputProps={{\r\n                        maxLength: 200,\r\n                      }}\r\n                      observedValue={state.title}\r\n                      observedChanged={(value) => {\r\n                        bloc.dispatch(new ModifyTitleEvent(value));\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldEx\r\n                      id=\"filled-multiline-static\"\r\n                      label=\"隨意抒發(選填)\"\r\n                      fullWidth\r\n                      multiline\r\n                      rows=\"4\"\r\n                      variant=\"outlined\"\r\n                      inputProps={{\r\n                        maxLength: 200,\r\n                      }}\r\n                      observedValue={state.comment}\r\n                      observedChanged={(value) => {\r\n                        bloc.dispatch(new ModifyCommentEvent(value));\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  disabled={!state.isFormValid}\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    bloc.dispatch(new SubmitEvent(window));\r\n                  }}\r\n                >\r\n                  贊助         \r\n                </Button>\r\n                <div style={{\r\n                  pointerEvents: state.isFormValid ? \"auto\" : \"none\",\r\n                  mixBlendMode: state.isFormValid ? \"inherit\" : \"luminosity\",\r\n                }}>\r\n                  <PayPalButton\r\n                    amount=\"0.01\"\r\n                    // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\r\n                    onSuccess={async (details: any, data: any) => {\r\n                      alert(\"Transaction completed by \" + details.payer.name.given_name);\r\n            \r\n                      // OPTIONAL: Call your server to save the transaction\r\n                      console.log(\"CALLA\");\r\n                      const response = await superagent.agent().post(Config.helperApi + \"/tests/paypal_callback\")\r\n                        .send(\r\n                          JSON.stringify({\r\n                            orderId: data.orderID\r\n                          })\r\n                        );\r\n                      console.log(\"CALLB\");\r\n                      return response;\r\n                    }}\r\n                    options={{\r\n                      clientId: Config.paypalClientId\r\n                    }}\r\n                  />\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        />\r\n      </Card>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    {/* Footer */}\r\n    {/* <Footer style={{ backgroundColor: \"#f2f2f2\" }} /> */}\r\n    {/* End footer */}\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAOA;AAGA;AAEA;AACA;AAWA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAFA;AAIA;AACA;AADA;AAxBA;AAAA;AACA;AA4BA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAIA;AAAA;AADA;AAGA;AAAA;AAGA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAdA;AAmBA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAbA;AAgBA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAoBA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAXA;AAcA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAbA;AAgBA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAcA;AACA;AACA;AAFA;AAAA;AAKA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAJA;AAAA;AAQA;AADA;AACA;AARA;AAKA;AAMA;AAXA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAcA;AACA;AADA;AAjBA;AAwBA;AA7IA;AAgJA;AAAA;AAQA;;;;A","sourceRoot":""}