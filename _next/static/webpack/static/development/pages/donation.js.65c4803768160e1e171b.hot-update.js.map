{"version":3,"file":"static/webpack/static\\development\\pages\\donation.js.65c4803768160e1e171b.hot-update.js","sources":["webpack:///./src/components/paypal_button.tsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport interface PayPalButtonProps {\r\n    amount?: number|string,\r\n    currency?: number|string,\r\n    shippingPreference?: \"NO_SHIPPING\" | \"GET_FROM_FILE\" | \"SET_PROVIDED_ADDRESS\",\r\n    onSuccess?: Function,\r\n    catchError?: Function,\r\n    onError?: Function,\r\n    createOrder?: Function,\r\n    createSubscription?: Function,\r\n    onApprove?: Function,\r\n    disabled?: Boolean,\r\n    style?: object,\r\n    options?: PaypalOptions,\r\n    onButtonReady?: Function,\r\n}\r\n\r\nexport interface PayPalButtonState {\r\n    isSdkReady: boolean\r\n}\r\n\r\nexport interface PaypalOptions {\r\n    clientId?: string,\r\n    merchantId?: string,\r\n    currency?: number|string,\r\n    intent?: string,\r\n    commit?: boolean|string,\r\n    vault?: boolean|string,\r\n    component?: string,\r\n    disableFunding?: string,\r\n    disableCard?: string,\r\n    integrationDate?: string,\r\n    locale?: string,\r\n    buyerCountry?: string,\r\n    debug?: boolean|string\r\n}\r\n\r\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\r\n    static propTypes = {\r\n        amount: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string,\r\n        ]),\r\n        currency: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string,\r\n        ]),\r\n        disabled: PropTypes.bool,\r\n        shippingPreference: PropTypes.string,\r\n        onSuccess: PropTypes.func,\r\n        catchError: PropTypes.func,\r\n        onError: PropTypes.func,\r\n        createOrder: PropTypes.func,\r\n        createSubscription: PropTypes.func,\r\n        onApprove: PropTypes.func,\r\n        style: PropTypes.object,\r\n        options: PropTypes.shape({\r\n            clientId: PropTypes.string,\r\n            merchantId: PropTypes.string,\r\n            currency: PropTypes.oneOfType([\r\n                PropTypes.number,\r\n                PropTypes.string,\r\n            ]),\r\n            intent: PropTypes.string,\r\n            commit: PropTypes.oneOfType([\r\n                PropTypes.bool,\r\n                PropTypes.string\r\n            ]),\r\n            vault: PropTypes.oneOfType([\r\n                PropTypes.bool,\r\n                PropTypes.string\r\n            ]),\r\n            component: PropTypes.string,\r\n            disableFunding: PropTypes.string,\r\n            disableCard: PropTypes.string,\r\n            integrationDate: PropTypes.string,\r\n            locale: PropTypes.string,\r\n            buyerCountry: PropTypes.string,\r\n            debug: PropTypes.oneOfType([\r\n                PropTypes.bool,\r\n                PropTypes.string\r\n            ])\r\n        }),\r\n        onButtonReady: PropTypes.func,\r\n    }\r\n\r\n    static defaultProps = {\r\n        style: {},\r\n        options: {\r\n            clientId: \"sb\",\r\n            currency: \"USD\",\r\n            disableFunding: \"credit,card\",\r\n        },\r\n        shippingPreference: \"GET_FROM_FILE\",\r\n    }\r\n\r\n    constructor(props: PayPalButtonProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isSdkReady: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (\r\n            typeof window !== \"undefined\" &&\r\n            window !== undefined &&\r\n            (window as any).paypal === undefined\r\n        ) {\r\n            this.addPaypalSdk();\r\n        }\r\n        else if (\r\n            typeof window !== \"undefined\" &&\r\n            window !== undefined &&\r\n            (window as any).paypal !== undefined &&\r\n            this.props.onButtonReady\r\n        ) {\r\n            this.props.onButtonReady();\r\n        }\r\n        var btnElement = (document.getElementsByClassName(\"paypal-button\") as HTMLCollectionOf<HTMLElement>)[0];\r\n        if(this.props.disabled) {\r\n          if(btnElement.style !== undefined)\r\n            btnElement.style.background = \"grey\";\r\n        } else {\r\n          if(btnElement.style !== undefined)\r\n            btnElement.style.background = \"#ffc439\";\r\n        }\r\n    }\r\n\r\n    createOrder(data: any, actions: any) {\r\n\r\n        const { currency, options, amount, shippingPreference } = this.props;\r\n\r\n        return actions.order.create({\r\n          purchase_units: [\r\n            {\r\n              amount: {\r\n                currency_code: currency\r\n                  ? currency\r\n                  : options && options.currency\r\n                  ? options.currency\r\n                  : \"USD\",\r\n                value: amount.toString()\r\n              }\r\n            }\r\n          ],\r\n          application_context: {\r\n            shipping_preference: shippingPreference\r\n          }\r\n        });\r\n    }\r\n\r\n    onApprove(data: any, actions: any) {\r\n        return actions.order\r\n            .capture()\r\n            .then((details: any) => {\r\n                if (this.props.onSuccess) {\r\n                    return this.props.onSuccess(details, data);\r\n                }\r\n            })\r\n            .catch((err: any) => {\r\n                if (this.props.catchError) {\r\n                    return this.props.catchError(err);\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            amount,\r\n            onSuccess,\r\n            createOrder,\r\n            createSubscription,\r\n            onApprove,\r\n            style,\r\n        } = this.props;\r\n        const { isSdkReady } = this.state;\r\n\r\n        if (\r\n            !isSdkReady &&\r\n            (typeof window === \"undefined\" || (window as any).paypal === undefined)\r\n        ) {\r\n            return null;\r\n        }\r\n\r\n        const Button = (window as any).paypal.Buttons.driver(\"react\", {\r\n            React,\r\n            ReactDOM,\r\n        });\r\n\r\n        const createOrderFn =\r\n            amount && !createOrder\r\n                ? (data: any, actions: any) => this.createOrder(data, actions)\r\n                : (data: any, actions: any) => createOrder(data, actions);\r\n\r\n        return (\r\n            <Button\r\n                {...this.props}\r\n                createOrder={createSubscription ? undefined : createOrderFn}\r\n                createSubscription={createSubscription}\r\n                onApprove={\r\n                    onSuccess\r\n                        ? (data: any, actions: any) => this.onApprove(data, actions)\r\n                        : (data: any, actions: any) => onApprove(data, actions)\r\n                }\r\n                style={style}\r\n            />\r\n        );\r\n    }\r\n\r\n    private addPaypalSdk() {\r\n        const { options, onButtonReady } = this.props;\r\n\r\n        const separator = (key: string): string => key.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n        const createQueryParam = (object: object, modifier: Function): string => Object.entries(object)\r\n            .reduce((acc: string [], [key, value]: [string, string]) => {\r\n                acc.push(`${modifier(key)}=${value}`);\r\n                return acc;\r\n            }, []).join(\"&\");\r\n        const queryParam = createQueryParam({...PayPalButton.defaultProps.options, ...options}, separator);\r\n\r\n        const script = document.createElement(\"script\");\r\n        script.type = \"text/javascript\";\r\n        script.src = `https://www.paypal.com/sdk/js?${queryParam}`;\r\n        script.async = true;\r\n        script.onload = () => {\r\n            this.setState({ isSdkReady: true });\r\n\r\n            if (onButtonReady) {\r\n                onButtonReady();\r\n            }\r\n        };\r\n        script.onerror = () => {\r\n            throw new Error(\"Paypal SDK could not be loaded.\");\r\n        };\r\n\r\n        document.body.appendChild(script);\r\n    }\r\n}\r\n\r\nexport { PayPalButton };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAqCA;;;;;AA2DA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAHA;AAMA;AACA;;;AACA;AACA;AAKA;AACA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AAKA;AANA;AADA;AAWA;AACA;AADA;AAbA;AAiBA;;;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AAAA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAEA;AATA;AAYA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;AAzMA;AACA;AADA;AAEA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AA2BA;AA7CA;AACA;AAFA;AAkDA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AACA;;;;;A","sourceRoot":""}