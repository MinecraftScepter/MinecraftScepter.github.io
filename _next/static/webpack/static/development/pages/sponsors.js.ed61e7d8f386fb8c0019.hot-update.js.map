{"version":3,"file":"static/webpack/static\\development\\pages\\sponsors.js.ed61e7d8f386fb8c0019.hot-update.js","sources":["webpack:///./pages/sponsors/index.tsx"],"sourcesContent":["// https://cdn.dribbble.com/users/1217824/screenshots/2807461/gl.png\r\nimport React from 'react';\r\nimport {\r\n  AppBar, Button, Box, Card, CardActions, CardContent, CardMedia,\r\n  CssBaseline, Grid, List, ListItem, ListItemText, Paper, Toolbar, Typography,\r\n  Container, Link as MuiLink, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, TableContainer, Table, TableRow, TableHead, TableCell, TableBody, IconButton, CircularProgress, \r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  PhotoCamera as CameraIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  ArrowLeft as LeftIcon,\r\n  ArrowRight as RightIcon,\r\n} from '@material-ui/icons';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ProTip from '~/src/ProTip';\r\nimport Link from '~/src/link';\r\nimport Header from '~/src/header';\r\nimport Footer from'~/src/footer';\r\nimport { useTranslatorContext } from '~/src/utility/translator/translatorContext';\r\nimport { DonationType, DonationSectionBloc, PageStartEvent, DonationSectionState, PreviousPageEvent, NextPageEvent } from './bloc/donation_section_bloc';\r\nimport { useBloc } from '~/src/utility/bloc_utility';\r\nimport { DonationTopResponse, DonationLatestResponse } from '~/src/types/response';\r\nimport { BlocBuilder } from '@felangel/react-bloc';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\n\r\nexport default function Index() {\r\n  const classes = useStyles({});\r\n  const t = useTranslatorContext();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Header tabIndex={2}/>\r\n      <main>\r\n        <Container style={{paddingTop: 16}}>\r\n          <Box style={{\r\n            borderBottom: \"2px solid\"\r\n          }}>\r\n            <Typography variant=\"h4\">贊助者們</Typography>\r\n          </Box>\r\n          <Box height={16} />\r\n          <Grid container spacing={2} style={{paddingLeft: 16, paddingRight: 16}}>\r\n            <Grid item sm={6}>\r\n              <DontaionTopSection />\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              <Card elevation={8} style={{padding: 8}}>\r\n                <Typography>🆕最新贊助</Typography>\r\n                <Divider />\r\n                <Box height={16} />\r\n                <TableContainer>\r\n                  <Table style={{borderTopLeftRadius: 16, borderTopRightRadius: 16, overflow: \"hidden\"}} >\r\n                    <TableHead style={{backgroundColor: \"rgb(139,115,108)\", outlineColor: \"beige\", outlineStyle: \"outset\"}}>\r\n                      <TableRow>\r\n                        <TableCell style={{fontWeight: \"bold\", color:\"rgb(255,244,119)\"}}>贊助者</TableCell>\r\n                        <TableCell style={{fontWeight: \"bold\", color:\"rgb(255,244,119)\"}} align=\"right\">金額</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody style={{color: \"rgb(97,63,0)\"}}>\r\n                      <TableRow style={{backgroundColor: \"#ffffc7\"}}>\r\n                        <TableCell >👑青雲</TableCell>\r\n                        <TableCell align=\"right\">TWD 500</TableCell>\r\n                      </TableRow>\r\n                      <TableRow style={{backgroundColor: \"#ffffc7\"}}>\r\n                        <TableCell >⭐️青雲</TableCell>\r\n                        <TableCell align=\"right\">TWD 500</TableCell>\r\n                      </TableRow>\r\n                      <TableRow style={{backgroundColor: \"#ffffc7\"}}>\r\n                        <TableCell >🚀青雲</TableCell>\r\n                        <TableCell align=\"right\">TWD 500</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <Footer style={undefined}/>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction DontaionTopSection() {\r\n\r\n  const bloc = useBloc(new DonationSectionBloc<DonationTopResponse>());\r\n\r\n  React.useEffect(() => {\r\n    bloc.dispatch(new PageStartEvent(DonationType.Top));\r\n  });\r\n\r\n  return (\r\n    <BlocBuilder<DonationSectionBloc<DonationTopResponse>, DonationSectionState>\r\n      bloc={bloc}\r\n      builder={\r\n        (state) => {\r\n          if(state.isLoading)\r\n            return (\r\n              <CircularProgress />\r\n            )\r\n          const datas = state.datas as Array<DonationTopResponse>;\r\n          return (\r\n            <Card elevation={8} style={{padding: 8}}>\r\n              <Typography>🏆贊助榜</Typography>\r\n              <Divider />\r\n              <Box height={16} />\r\n              <TableContainer>\r\n                <Table style={{borderTopLeftRadius: 16, borderTopRightRadius: 16, overflow: \"hidden\"}} >\r\n                  <TableHead style={{backgroundColor: \"rgb(139,115,108)\", outlineColor: \"beige\", outlineStyle: \"outset\"}}>\r\n                    <TableRow>\r\n                      <TableCell style={{fontWeight: \"bold\", color:\"rgb(255,244,119)\"}}>贊助者</TableCell>\r\n                      <TableCell style={{fontWeight: \"bold\", color:\"rgb(255,244,119)\"}} align=\"right\">金額</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody style={{color: \"rgb(97,63,0)\"}}>\r\n                    {\r\n                      datas.map((data, index) => (\r\n                        <TableRow style={{backgroundColor: \"#ffffc7\"}}>\r\n                          <TableCell >\r\n                            {\r\n                              (state.page == 0) ?\r\n                                (\r\n                                  index == 0 ? `👑${data.names[data.names.length - 1]}` :\r\n                                  index == 1 ? `⭐️${data.names[data.names.length - 1]}` :\r\n                                  index == 2 ? `🚀${data.names[data.names.length - 1]}` :\r\n                                  `${data.names[data.names.length - 1]}`\r\n                                ) :\r\n                                `${data.names[data.names.length - 1]}`\r\n                            }\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">TWD {data.total}</TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n                <div style={{float: \"right\"}}>\r\n                  <span>\r\n                    <IconButton \r\n                      disabled={!state.isPrevValid}\r\n                      onClick={(_) => bloc.dispatch(new PreviousPageEvent())}>\r\n                      <LeftIcon />\r\n                    </IconButton>\r\n                    <IconButton \r\n                      disabled={!state.isNextValid}\r\n                      onClick={(_) => bloc.dispatch(new NextPageEvent())}>\r\n                      <RightIcon />\r\n                    </IconButton>\r\n                  </span>\r\n                </div>\r\n              </TableContainer>\r\n            </Card>\r\n          )\r\n        }\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\n\r\nfunction DontaionLatestSection() {\r\n\r\n  const bloc = useBloc(new DonationSectionBloc<DonationLatestResponse>());\r\n\r\n  React.useEffect(() => {\r\n    bloc.dispatch(new PageStartEvent(DonationType.Latest));\r\n  });\r\n\r\n  return (\r\n    <BlocBuilder<DonationSectionBloc<DonationLatestResponse>, DonationSectionState>\r\n      bloc={bloc}\r\n      builder={\r\n        (state) => {\r\n          if(state.isLoading)\r\n            return (\r\n              <CircularProgress />\r\n            )\r\n          const datas = state.datas as Array<DonationLatestResponse>;\r\n          return (\r\n            <Card elevation={8} style={{padding: 8}}>\r\n              <Typography>🆕最新贊助</Typography>\r\n              <Divider />\r\n              <Box height={16} />\r\n              <TableContainer>\r\n                <Table style={{borderTopLeftRadius: 16, borderTopRightRadius: 16, overflow: \"hidden\"}} >\r\n                  <TableHead style={{backgroundColor: \"rgb(139,115,108)\", outlineColor: \"beige\", outlineStyle: \"outset\"}}>\r\n                    <TableRow>\r\n                      <TableCell style={{fontWeight: \"bold\", color:\"rgb(255,244,119)\"}}>贊助者</TableCell>\r\n                      <TableCell style={{fontWeight: \"bold\", color:\"rgb(255,244,119)\"}} align=\"right\">金額</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody style={{color: \"rgb(97,63,0)\"}}>\r\n                    {\r\n                      datas.map((data, index) => (\r\n                        <TableRow style={{backgroundColor: \"#ffffc7\"}}>\r\n                          <TableCell >\r\n                            {\r\n                             `${data.name}`\r\n                            }\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">TWD {data.price}</TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n                <div style={{float: \"right\"}}>\r\n                  <span>\r\n                    <IconButton \r\n                      disabled={!state.isPrevValid}\r\n                      onClick={(_) => bloc.dispatch(new PreviousPageEvent())}>\r\n                      <LeftIcon />\r\n                    </IconButton>\r\n                    <IconButton \r\n                      disabled={!state.isNextValid}\r\n                      onClick={(_) => bloc.dispatch(new NextPageEvent())}>\r\n                      <RightIcon />\r\n                    </IconButton>\r\n                  </span>\r\n                </div>\r\n              </TableContainer>\r\n            </Card>\r\n          )\r\n        }\r\n      }\r\n    />\r\n  )\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAMA;AAOA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AA1BA;AAAA;AAiCA;AACA;AACA;AAEA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAWA;AAAA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAaA;AAAA;AAdA;AAoBA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAMA;AACA;AAAA;AAAA;AAFA;AAUA;AA7DA;AAiEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAPA;AAaA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAMA;AACA;AAAA;AAAA;AAFA;AAUA;AAtDA;AA0DA;;;;A","sourceRoot":""}